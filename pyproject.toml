[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
start.help = "Start development server with hot reload"
start.cmd = "uvicorn indecision.asgi:application --reload"

build-schema.cmd = "python manage.py get_graphql_schema"
build-schema.capture_stdout = "indecision/graphql/schema.graphql"
build-schema.help = "Build GraphQL schema to indecision/graphql/schema.graphql file"

migrate.cmd = "python manage.py migrate"
migrate.help = "Run database migrations"

release.shell = "npm run release"
release.help = """
Release new Indecision version
Prerequisities:
- Node installed on machine
- Run npm install to install dependencies
"""

shell.cmd = "python manage.py shell"
shell.help = "Start Django shell in interactive mode"

populatedb.cmd = "python manage.py populatedb --createsuperuser"
populatedb.help = """
Populates database with sample data and creates admin user with credentials:
- email: admin@example.com
- password: admin
"""

test.cmd="pytest --reuse-db"
test.help = "Run tests with db reuse to speed up testing time"


[tool.poetry]
name = "indecision"
version = "3.21.0-a.0"
description = "Poetry testing"
authors = [ "Nathan Keyes <nathankeyes1@gmail.com>" ]
readme = "README.md"
repository = "https://github.com/keyesn/indecision"
package-mode = false

  [tool.poetry.dependencies]
  python = "~3.12"
  asgiref = "^3.7.2"
  redis = "^5.0.1"
  requests = "^2.32"
  python-dotenv = "^1.0.1"

  [tool.poetry.group.dev.dependencies]
  pre-commit = "^4.0"
  pytest = "^8.3.2"
  ruff = "^0.9.1"


[tool.ruff]
target-version = "py312"

  [tool.ruff.lint]
  select = [
    "ASYNC",
    "B",
    "C4",
    "D",
    "DTZ",
    "E",
    "F",
    "FURB",
    "G",
    "I",
    "ISC001",
    "ISC002",
    "LOG",
    "PGH",
    "PIE",
    "PT",
    "PYI",
    "RET",
    "T20",
    "UP",
    "W"
  ]
  ignore = [
    "B009", # Do not call getattr with a constant value
    "B010", # Do not call setattr with a constant value
    "B023", # Function definition does not bind loop variable
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D206", # Docstring should be indented with spaces, not tabs
    "D213", # Multi-line docstring summary should start at the second line
    "D407", # Missing dashed underline after section
    "E501", # Line too long
    "PT019", # Fixture without value is injected as parameter, use @pytest.mark.usefixtures instead
    "PYI041", # Use `float` instead of `int | float`
    "RET504" # Unnecessary assignment before return statement
  ]

  [tool.ruff.lint.flake8-pytest-style]
  fixture-parentheses = false
  mark-parentheses = false

  [tool.ruff.lint.isort]
  known-first-party = ["saleor"]
